# Get all the Classes
select distinct ?Concept where { ?x a ?Concept } limit 100

# Get all the subclasses of the class Establishment
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { ?x rdfs:subClassOf :Establishment } limit 100

# Get all instances of the class City
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { ?x a :City } limit 100

# Get the number of inhabitants of Santiago de Compostela
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { :Santiago_de_Compostela :hasInhabitantNumber ?x } LIMIT 100

# Get the number of inhabitants of Santiago de Compostela and Arzua
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x ?y where {{ :Santiago_de_Compostela :hasInhabitantNumber ?x . :Arzua :hasInhabitantNumber ?y }} LIMIT 100

# Get all places, together with the number of inhabitants, ordered by the place name (ascending)
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x ?y where { ?x :hasInhabitantNumber ?y . ?x rdfs:label ?name } ORDER BY ?name ASC(?x) LIMIT 100

# Get all instances of  Locality together with their number of inhabitants (if this information exists)
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x ?y where { ?x a :Locality . ?x :hasInhabitantNumber ?y } LIMIT 100

# Get all places with more than 200.000 inhabitants
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { ?x :hasInhabitantNumber ?y . FILTER (xsd:integer(?y) > 200000) } LIMIT 100

# Get postal address data for Pazo_Breogan (street, number, locality, province)
prefix : <http://GP-onto.fi.upm.es/exercise2#> 
select distinct ?w ?x ?y ?z where { :Pazo_Breogan :hasAddress ?a . ?a :hasStreet ?w . ?a :hasNumber ?x . :Pazo_Breogan :isPlacedIn ?y . ?y :inProvince ?z } LIMIT 100

# Get all subclasses of class Location
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { ?x rdfs:subClassOf :Location } LIMIT 100

# Get all instances of class Locality
prefix : <http://GP-onto.fi.upm.es/exercise2#>
select distinct ?x where { ?x a :Locality } LIMIT 100

# Describe the resource with rdfs:label "Madrid”
describe ?x where { ?x rdfs:label "Madrid" } LIMIT 100

# Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”
prefix : <http://GP-onto.fi.upm.es/exercise2#>
construct { ?x :isIn ?y } where { ?x :isPlacedIn ?z . ?z :inProvince ?y } LIMIT 100

# Check whether there is any instance of Town
prefix : <http://GP-onto.fi.upm.es/exercise2#>
ask where { ?x a :Town }